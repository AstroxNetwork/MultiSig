type App = record {
  logo : text;
  name : text;
  description : text;
  app_id : text;
  category : Category;
  current_version : Version;
  price : float32;
};
type AppInfo = record { app_id : text; current_version : Version };
type Category = variant { System; Vault };
type EgoBtcError = variant { UnknownError : text; AddressNotFound };
type GetAddressResponse = record { address : text };
type Network = variant { Mainnet; Regtest; Testnet };
type OutPoint = record { txid : vec nat8; vout : nat32 };
type Result = variant { Ok : AppInfo; Err : text };
type Result_1 = variant { Ok; Err : text };
type Result_2 = variant { Ok : App; Err : text };
type Result_3 = variant { Ok : nat; Err : text };
type Result_4 = variant { Ok : GetAddressResponse; Err : EgoBtcError };
type Result_5 = variant { Ok : UserBalanceResponse; Err : EgoBtcError };
type Result_6 = variant { Ok : SendResponse; Err : EgoBtcError };
type Result_7 = variant { Ok : vec text; Err : text };
type SendRequest = record {
  request_id : nat64;
  path : text;
  to_address : text;
  amount_in_satoshi : nat64;
  extended : vec record { text; text };
};
type SendResponse = record {
  tx_id : text;
  from_address : text;
  amount_in_satoshi : nat64;
};
type UserBalanceResponse = record { balance : nat64 };
type Utxo = record { height : nat32; value : nat64; outpoint : OutPoint };
type Version = record { major : nat32; minor : nat32; patch : nat32 };
service : () -> {
  app_info_get : () -> (Result) query;
  app_info_update : (text, Version) -> (Result_1);
  app_version_check : () -> (Result_2) query;
  balance_get : () -> (Result_3) query;
  btc_address_get : (text) -> (Result_4) query;
  btc_address_get_all : () -> (vec text) query;
  btc_address_set : (text) -> (text);
  btc_balance_get : (text) -> (nat64);
  btc_balance_path_get : (text) -> (Result_5);
  btc_fee_get : () -> (vec nat64);
  btc_get_txid : (nat64) -> (opt text) query;
  btc_is_owner : () -> (bool) query;
  btc_is_user : () -> (bool) query;
  btc_key_get : () -> (text) query;
  btc_network_get : () -> (Network) query;
  btc_network_set : (Network) -> (Network);
  btc_tx_send : (SendRequest) -> (Result_6);
  btc_utxos_get : (text) -> (vec Utxo);
  ego_canister_add : (text, principal) -> (Result_1);
  ego_controller_add : (principal) -> (Result_1);
  ego_controller_remove : (principal) -> (Result_1);
  ego_controller_set : (vec principal) -> (Result_1);
  ego_log_list : (nat64) -> (Result_7) query;
  ego_op_add : (principal) -> (Result_1);
  ego_owner_add : (principal) -> (Result_1);
  ego_owner_remove : (principal) -> (Result_1);
  ego_owner_set : (vec principal) -> (Result_1);
  ego_user_add : (principal) -> (Result_1);
  ego_user_remove : (principal) -> (Result_1);
  ego_user_set : (vec principal) -> (Result_1);
}